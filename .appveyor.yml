version: '{build}'

environment:
  global:
    BORG_USE_BUNDLED_B2: YES    
    BORG_USE_BUNDLED_LZ4: YES    
    BORG_USE_BUNDLED_ZSTD: YES    
    BORG_USE_BUNDLED_XXHASH: YES
  
  matrix:
    # - PYTHON: C:\Python36-x64
    #   BORG_OPENSSL_PREFIX: C:\OpenSSL-v111-Win64

    - PYTHON: C:\Python37-x64
      BORG_OPENSSL_PREFIX: C:\OpenSSL-v111-Win64

    # - PYTHON: C:\Python36
    #   BORG_OPENSSL_PREFIX: C:\OpenSSL-v111-Win32

    # - PYTHON: C:\Python37
    #   BORG_OPENSSL_PREFIX: C:\OpenSSL-v111-Win32

# Build artifacts: all wheel and exe files in the dist folder
artifacts:
  - path: 'dist\*.whl'
  - path: 'dist\*.exe'
  - path: dist
  - path: build

# Scripts that run after cloning the repository
install:
  # OpenSSL must be in the path, otherwise libcrypto cannot be found.
  - SET PATH=%BORG_OPENSSL_PREFIX%;%PATH%
  # We need wheel and cython to build borg and pyinstaller to create the executable.
  - "%PYTHON%/python.exe -m venv borg-env"
  # Activate the virutalenv
  - "./borg-env/Scripts/activate"
  # Install the dependencies. Beside the development requirements, wheel and pyinstaller is required
  - "pip install -r requirements.d/development.txt"
  - "pip install -U wheel pyinstaller"


build_script:
- cmd: >-

    ./borg-env/Script/activate 
    
    python.exe -m pip install -e .

    python.exe setup.py bdist_wheel

    python.exe setup.py build_ext --inplace

    pyinstaller.exe scripts/borg.exe.spec
